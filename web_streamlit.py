import streamlit as st
import numpy as np
import cv2
from ultralytics import YOLO
from PIL import Image

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
model_load = YOLO('best.pt')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ –≤ —Ç–µ–∫—Å—Ç
class_mapping = {
    0: 'scratches',
    1: 'wrong pixels',
    2: 'keyboard defects',
    3: 'lock',
    4: 'crews trubles',
    5: 'chipped',
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
if 'model_applied' not in st.session_state:
    st.session_state['model_applied'] = False
if 'rows' not in st.session_state:
    st.session_state['rows'] = 0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–æ–ª—å–∫–æ —Å–∞–º—ã—Ö —É–≤–µ—Ä–µ–Ω–Ω—ã—Ö bbox
def apply_model(image):
    st.session_state['model_applied'] = True
    st.session_state['rows'] += 1

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ YOLO
    results = model_load(image, conf = 0.05)

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    boxes = results[0].boxes.data.cpu().numpy()  # –ü–æ–ª—É—á–∞–µ–º bbox: [x1, y1, x2, y2, score, class]

    # –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—ã–π —É–≤–µ—Ä–µ–Ω–Ω—ã–π bbox –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞
    best_boxes = []
    class_max_scores = {}

    for box in boxes:
        score = box[4]
        cls = int(box[5])  # –∏–Ω–¥–µ–∫—Å –∫–ª–∞—Å—Å–∞

        if cls not in class_max_scores or score > class_max_scores[cls]:
            class_max_scores[cls] = score
            if cls in class_max_scores:
                best_boxes = [b for b in best_boxes if int(b[5]) != cls]  # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π bbox —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
            best_boxes.append(box)

    # –ö–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ bbox
    annotated_image = image.copy()

    # –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º bbox –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    for box in best_boxes:
        x1, y1, x2, y2, score, cls = box
        cls_label = class_mapping.get(int(cls), '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–ª–∞—Å—Å')  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞
        annotated_image = cv2.rectangle(annotated_image, (int(x1), int(y1)), (int(x2), int(y2)), (0, 255, 0), 2)
        annotated_image = cv2.putText(annotated_image, f'{cls_label}: {score:.2f}', (int(x1), int(y1) - 10),
                                      cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2)

    return annotated_image

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–µ—Ñ–µ–∫—Ç–æ–≤ –Ω–æ—É—Ç–±—É–∫–æ–≤", page_icon="üíª")
st.title("–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–µ—Ñ–µ–∫—Ç–æ–≤ –Ω–æ—É—Ç–±—É–∫–æ–≤ –Ω–∞ –±–∞–∑–µ –ò–ò")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ—É—Ç–±—É–∫–∞ (png, jpg, jpeg):", type=["png", "jpg", "jpeg"])

if uploaded_file is not None:
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image = Image.open(uploaded_file)
    image_np = np.array(image)
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
    if st.button("–ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–æ–¥–µ–ª—å"):
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        annotated_image = apply_model(image_np)

        # –í—ã–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–∞–ª–æ–∂–µ–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ç–∫–æ–π
        st.image(annotated_image, caption="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π", use_column_width=True)

# Footer
footer = """<style>
a:link , a:visited{
color: blue;
background-color: transparent;
text-decoration: underline;
}
a:hover,  a:active {
color: red;
background-color: transparent;
text-decoration: underline;
}
.footer {
position: fixed;
left: 0;
bottom: 0;
width: 100%;
background-color: black;
color: white;
text-align: center;
}
</style>
<div class="footer">
<p>Developed with ‚ù§ by <a style='display: block; text-align: center;' href="https://vk.com/korol.shamanov" target="_blank">Mirea Team</a></p>
</div>
"""
st.markdown(footer, unsafe_allow_html=True)
